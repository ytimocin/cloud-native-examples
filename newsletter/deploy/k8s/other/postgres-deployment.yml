apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init-script
          image: postgres:latest
          env:
            - name: POSTGRES_DB
              value: "newsletter"
            - name: POSTGRES_USER
              value: "adminuser"
            - name: POSTGRES_PASSWORD
              value: "adminpass"
          volumeMounts:
            - name: init-script
              mountPath: /docker-entrypoint-initdb.d
          command: ["/bin/bash", "/docker-entrypoint-initdb.d/init.sh"]
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5433
          env:
            - name: POSTGRES_DB
              value: "newsletter"
            - name: POSTGRES_USER
              value: "adminuser"
            - name: POSTGRES_PASSWORD
              value: "adminpass"
          resources:
            limits:
              cpu: "500m"
              memory: "512Mi"
            requests:
              cpu: "100m"
              memory: "256Mi"
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc
        - name: init-script
          configMap:
            name: postgres-init-script
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5433
      targetPort: 5433
  type: ClusterIP
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-init-script
data:
  init.sh: |
    #!/bin/bash
    set -e

    # Example initialization commands
    psql -v ON_ERROR_STOP=1 --username "$POSTGRES_USER" --dbname "$POSTGRES_DB" <<-EOSQL
      CREATE TABLE IF NOT EXISTS subscriptions (
        id SERIAL PRIMARY KEY,
        email VARCHAR(255) NOT NULL,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
      );
    EOSQL
